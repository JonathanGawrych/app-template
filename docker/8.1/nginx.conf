server {
	# No showing the folder directory
	autoindex off;
	# Don't tell the user what build we are running
	server_tokens off;
	# Catch-all server
	server_name _;
	listen 80 default_server;
	listen [::]:80 default_server;

	# Logging
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	# Serve the files in public
	root /var/www/html/public/;

	# Any laravel api we want to serve laravel
	location /api/ {
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME /var/www/html/public/api/index.php;
		fastcgi_pass unix:/run/php/php8.1-fpm.sock;
	}

	# If it's exactly the root, serve the index.html in angular's dist folder
	# It'd be prefereable if we didn't have to do this, but I couldn't see how
	# to get Angular to build without destroying everything else in that folder,
	# or how to just get index.html in the root, so we'll rewrite to the subdirectory
	# This should be invisible to the user.
	location = / {
		alias /var/www/html/public/dist/;
		# Without try_files, nginx does another internal redirect, which is a headache
		# https://stackoverflow.com/a/29982174/1248889
		try_files index.html = 404;
	}
}
